# Generated by Django 5.1.13 on 2025-10-04 23:35

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Education",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("institution", models.CharField(max_length=200)),
                ("degree", models.CharField(max_length=200)),
                ("field_of_study", models.CharField(max_length=200)),
                ("location", models.CharField(blank=True, max_length=200)),
                ("description", models.TextField(blank=True)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("grade", models.CharField(blank=True, max_length=50)),
                ("institution_url", models.URLField(blank=True)),
                ("order", models.IntegerField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="education",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Education",
                "verbose_name_plural": "Education",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("bio", models.TextField(blank=True)),
                ("profile_photo", models.ImageField(blank=True, null=True, upload_to="profiles/")),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("location", models.CharField(blank=True, max_length=200)),
                ("linkedin_url", models.URLField(blank=True)),
                ("github_url", models.URLField(blank=True)),
                ("twitter_url", models.URLField(blank=True)),
                ("website_url", models.URLField(blank=True)),
                ("job_title", models.CharField(blank=True, max_length=200)),
                ("company", models.CharField(blank=True, max_length=200)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, related_name="profile", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BlogPost",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=250, unique=True)),
                ("excerpt", models.CharField(blank=True, max_length=300)),
                ("content", models.TextField()),
                ("featured_image", models.ImageField(blank=True, null=True, upload_to="blog/")),
                (
                    "status",
                    models.CharField(
                        choices=[("draft", "Draft"), ("published", "Published"), ("archived", "Archived")],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("tags", models.CharField(blank=True, help_text="Comma-separated tags", max_length=500)),
                ("views_count", models.IntegerField(default=0)),
                ("read_time", models.IntegerField(default=5, help_text="Estimated read time in minutes")),
                ("is_featured", models.BooleanField(default=False)),
                ("meta_description", models.CharField(blank=True, max_length=160)),
                ("meta_keywords", models.CharField(blank=True, max_length=255)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blog_posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Blog Post",
                "verbose_name_plural": "Blog Posts",
                "ordering": ["-published_at", "-created_at"],
                "indexes": [
                    models.Index(fields=["slug"], name="portfolio_b_slug_c9885d_idx"),
                    models.Index(fields=["status", "-published_at"], name="portfolio_b_status_c8f3ef_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Experience",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("company", models.CharField(max_length=200)),
                ("position", models.CharField(max_length=200)),
                ("location", models.CharField(blank=True, max_length=200)),
                ("description", models.TextField()),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, help_text="Leave blank if current", null=True)),
                ("is_current", models.BooleanField(default=False)),
                ("company_url", models.URLField(blank=True)),
                (
                    "technologies",
                    models.CharField(blank=True, help_text="Comma-separated technologies", max_length=500),
                ),
                ("order", models.IntegerField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="experiences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Experience",
                "verbose_name_plural": "Experiences",
                "ordering": ["-is_current", "-start_date"],
                "indexes": [models.Index(fields=["-start_date"], name="portfolio_e_start_d_79f850_idx")],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=250, unique=True)),
                ("description", models.TextField()),
                ("short_description", models.CharField(blank=True, max_length=300)),
                ("image", models.ImageField(blank=True, null=True, upload_to="projects/")),
                ("project_url", models.URLField(blank=True)),
                ("github_url", models.URLField(blank=True)),
                ("demo_url", models.URLField(blank=True)),
                ("tags", models.CharField(help_text="Comma-separated tags", max_length=500)),
                ("technologies", models.CharField(help_text="Comma-separated technologies", max_length=500)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_published", models.BooleanField(default=True)),
                ("order", models.IntegerField(default=0, help_text="Display order")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Project",
                "verbose_name_plural": "Projects",
                "ordering": ["-is_featured", "order", "-start_date"],
                "indexes": [
                    models.Index(fields=["slug"], name="portfolio_p_slug_e96b08_idx"),
                    models.Index(fields=["is_published", "-created_at"], name="portfolio_p_is_publ_2e001b_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("programming", "Programming"),
                            ("framework", "Framework"),
                            ("database", "Database"),
                            ("tool", "Tool"),
                            ("language", "Language"),
                            ("soft_skill", "Soft Skill"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=50,
                    ),
                ),
                (
                    "proficiency",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                            ("expert", "Expert"),
                        ],
                        default="intermediate",
                        max_length=20,
                    ),
                ),
                (
                    "level",
                    models.IntegerField(
                        default=5,
                        help_text="Skill level from 1 to 10",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "years_of_experience",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Years of experience with this skill",
                        max_digits=4,
                        null=True,
                    ),
                ),
                ("icon", models.CharField(blank=True, help_text="Icon class or URL", max_length=100)),
                ("order", models.IntegerField(default=0)),
                ("is_featured", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="skills", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "verbose_name": "Skill",
                "verbose_name_plural": "Skills",
                "ordering": ["-is_featured", "category", "order", "name"],
                "unique_together": {("user", "name")},
            },
        ),
    ]
